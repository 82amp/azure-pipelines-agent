parameters:

- name: jobName
  type: string

- name: displayName
  type: string

- name: pool
  type: object

- name: container
  type: string

- name: timeoutInMinutes
  type: number

- name: branch
  type: string

- name: os
  type: string
  values:
  - win
  - linux
  - osx
  - rhel.6

- name: arch
  type: string
  values:
  - arm
  - arm64
  - x64
  - x86

- name: unitTests
  type: boolean

- name: functionalTests
  type: boolean

- name: codeCoverage
  type: boolean

- name: componentDetection
  type: boolean

- name: sign
  type: boolean

- name: verifySigning
  type: boolean

- name: publishArtifact
  type: boolean

- name: enableADOLogIssue
  type: boolean
  default: false

- name: packageType
  type: string
  default: agent
  values:
  - agent
  - pipelines-agent

jobs:

- job: ${{ parameters.jobName }}
  displayName: ${{ parameters.displayName }}
  pool: ${{ parameters.pool }}
  timeoutInMinutes: ${{ parameters.timeoutInMinutes }}

  ${{ if ne(parameters.container, '') }}:
    container: ${{ parameters.container }}

  variables:
    PACKAGE_TYPE: ${{ parameters.packageType }}
    ${{ if eq(parameters.os, 'win') }}:
      devCommand: dev.cmd
    ${{ if ne(parameters.os, 'win') }}:
      devCommand: ./dev.sh
    layoutRoot: '_layout/${{ parameters.os }}-${{ parameters.arch }}'

  steps:

  # Component detection
  - ${{ if parameters.componentDetection }}:
    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'

  # Clean
  - checkout: self
    clean: true
